{
	"nodes":[
		{"type":"group","id":"aef727bb54f02a8c","x":5320,"y":-1480,"width":668,"height":930,"label":"Wochentage Vorjahr (Statistik)"},
		{"type":"group","id":"d77c1ae6cb90cb01","x":5200,"y":-240,"width":660,"height":564,"label":"Untitled group"},
		{"type":"text","text":"```\n# is_vacation, is_holiday -> FAIL\nversion = \"v9_3_1_1_revenue_daily_base_prev_year\"\nbase = \"v2_revenue_daily_base_28_days\"\nsql = f\"\"\"\nCREATE MODEL `sellpick-analytics-ml.familyholding.{version}`\nOPTIONS (MODEL_TYPE = 'BOOSTED_TREE_REGRESSOR',\nINPUT_LABEL_COLS = ['price_net_relative'])\nAS SELECT\n\nr.store_label,\nweekday,\nweek_num,\nis_vacation,\nis_holiday,\nprice_net / avg_price_net as price_net_relative,\n\nFROM `sellpick-analytics-ml.familyholding.{base}` r\njoin `sellpick-analytics-client.familyholding.stores_v2` s on s.store_label = r.store_label\n\nwhere avg_price_net != 0 and price_net != 0\nand business_day < \"2022-12-01\";\n\"\"\"\ntrain(sql)\ngenerate_results(version, base)\nevaluate(version)\n# To beat:\n# v8_1_2 0.228219\n```","id":"6f39ced6f7ef6933","x":1101,"y":-2180,"width":250,"height":60},
		{"type":"text","text":"## Compare all models\n```\nwith diffs as (\n  select\n  version,\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from `sellpick-analytics-ml.familyholding.export_20230207_after_v2` sp\n  where price_net_actual != 0\n  order by business_day, store_label\n)\n\nselect\nversion,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by version\norder by total desc\n```","id":"5f0f55a559ee6919","x":6875,"y":-2691,"width":725,"height":506},
		{"type":"text","text":"## Compare FH\n```\nwith diffs as (\n  select\n  store_number,\n  date as business_day,\n  daily_sales_net as price_net_actual,\n  daily_sales_net_target as predicted_price_net,\n  abs(daily_sales_net - daily_sales_net_target) / daily_sales_net as diff_sp,\n  from `sellpick-analytics-client.familyholding.source_daily_revenue_historic` fh\n  where daily_sales_net != 0\n  and store_number in (select Store_id from `sellpick-analytics-client.familyholding.stores_v2`)\n  and date between \"2022-12-01\" and \"2023-01-31\"\n  order by business_day, store_number\n)\n\nselect\nconcat(\"familyholding-\", cast(store_number as string)),\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by store_number\n\n\nunion all\n\nselect\n\"total\",\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\n\n\norder by 1 asc\n```","id":"7a9d511c8030105c","x":6140,"y":-2691,"width":735,"height":506},
		{"type":"text","text":"## Compare model\n\n```\nwith diffs as (\n  select\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from `sellpick-analytics-ml.familyholding.export_20230207_after_v2` sp\n  where version = \"v9_3_1_1_1_revenue_daily_base_14_days\"\n  and business_day not in (\n    \"2022-12-24\"\n  )\n  order by business_day, store_label\n),\nwith_median as (\n  select\n  *,\n  PERCENTILE_CONT(diff_sp, 0.5) OVER(PARTITION BY store_label) as median,\n  from diffs\n)\n\nselect\n\"total\" as store_label,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\navg(median) as median,\nfrom with_median\n\nunion all\n\nselect\nstore_label,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\navg(median) as median,\nfrom with_median\ngroup by 1\n\norder by 1\n```","id":"de0681f1fe768ad9","x":5360,"y":-2691,"width":780,"height":506},
		{"type":"text","text":"# Compare combined models, one for each store\n```\nwith diffs as (\n  select\n  \"xgboost\" as model_name,\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from `sellpick-analytics-ml.familyholding.export_20230207_after_v2` sp\n  where version = \"v9_3_1_1_1_1__revenue_daily_base_14_days\"\n  and business_day not in (\n    \"2022-12-24\"\n  )\n  and store_label in (\n    \"familyholding-14114\",\n    \"familyholding-15456\",\n    \"familyholding-8350\"\n  )\n\n  union all\n\n  select\n  \"automl\",\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from `sellpick-analytics-ml.familyholding.export_20230207_after_v2` sp\n  where version = \"v9_3_1_1_1_1_automl_revenue_daily_base_14_days\"\n  and business_day not in (\n    \"2022-12-24\"\n  )\n  and store_label in (\n    \"familyholding-12760\",\n    \"familyholding-13163\",\n    \"familyholding-14569\"\n  )\n  order by business_day, store_label\n),\nwith_median as (\n  select\n  *,\n  PERCENTILE_CONT(diff_sp, 0.5) OVER(PARTITION BY store_label) as median,\n  from diffs\n)\n\nselect\n\"total\" as store_label,\n\"total\",\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\navg(median) as median,\nfrom with_median\ngroup by 1, 2\n\nunion all\n\nselect\nstore_label,\nmodel_name,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\navg(median) as median,\nfrom with_median\ngroup by 1, 2\n\norder by 1\n```","id":"1759518e52e1d6fc","x":5360,"y":-2862,"width":780,"height":171},
		{"type":"file","file":"zAssets/Screenshot 2023-02-28 at 10.46.55.png","id":"f5fa9f4683528d4f","x":2370,"y":-2160,"width":399,"height":82},
		{"type":"text","text":"is_vacation","id":"91900fef686e3009","x":2445,"y":-2220,"width":250,"height":60},
		{"type":"text","text":"28 days: stdev 1.316","id":"3cc4ca83dab3ecdd","x":2520,"y":-1897,"width":250,"height":60},
		{"type":"text","text":"```\ndef generate_results(version, base):\n    sql = f\"\"\"\n    INSERT INTO `sellpick-analytics-ml.familyholding.export_20230207_after`\n    select\n    store_label,\n    business_day,\n    price_net as price_net_actual,\n    predicted_price_net_relative * avg_price_net as predicted_price_net,\n    temperature,\n    main_weather,\n    holiday_label,\n    bridging_day_count,\n    daybeforeholiday,\n    is_vacation,\n    null,\n    CURRENT_TIMESTAMP() AS imported_at,\n    \"{version}\" as version,\n\n    from ML.PREDICT(\n      MODEL `sellpick-analytics-ml.familyholding.v7_revenue_daily_base_prev_year`,\n      (\n        select r.* except(holiday_label), is_holiday as holiday_label, s.Location_type\n        from `sellpick-analytics-ml.familyholding.{base}` r\n        left join `sellpick-analytics-client.familyholding.stores_v2` s on s.store_label = r.store_label\n        where business_day between \"2022-12-01\" and \"2023-02-27\"\n      )\n    )\n    \"\"\"\n    client.query(sql).to_dataframe()\n\ndef evaluate(version):\n    sql = f\"\"\"\n    with diffs as (\n      select\n      store_label,\n      business_day,\n      price_net_actual,\n      predicted_price_net,\n      abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n      from `sellpick-analytics-ml.familyholding.export_20230207_after` sp\n      where version = \"{version}\"\n      order by business_day, store_label\n    )\n\n    select\n    avg(diff_sp) as total,\n    avg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\n    avg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\n    avg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\n    from diffs\"\"\"\n    return client.query(sql).to_dataframe()\n\ndef train(sql):\n    client.query(sql).to_dataframe()\n```","id":"95a71ffbc1068684","x":863,"y":-1982,"width":537,"height":411},
		{"type":"text","text":"```\n# hyperparams\nversion = \"v8_1_4_3_revenue_daily_base_prev_year\"\nbase = \"revenue_daily_relative_to_prev_year\"\nsql = f\"\"\"\nCREATE MODEL `sellpick-analytics-ml.familyholding.{version}`\nOPTIONS (MODEL_TYPE = 'BOOSTED_TREE_REGRESSOR',\n-- NUM_PARALLEL_TREE = 1,\n-- MAX_TREE_DEPTH = 20,\n-- MIN_TREE_CHILD_WEIGHT = 5,\nLEARN_RATE= 0.15,\nCOLSAMPLE_BYTREE = 0.9,\n-- MAX_ITERATIONS = 15,\n-- EARLY_STOP = TRUE,\nDATA_SPLIT_METHOD = 'RANDOM',\nDATA_SPLIT_EVAL_FRACTION = 0.1,\nINPUT_LABEL_COLS = ['price_net_relative'])\nAS SELECT\n\ns.Location_type,\nweek_num,\nweekday,\nprice_net / avg_price_net as price_net_relative,\n\nFROM `sellpick-analytics-ml.familyholding.{base}` r\njoin `sellpick-analytics-client.familyholding.stores_v2` s on s.store_label = r.store_label\n\nwhere avg_price_net != 0 and price_net != 0\nand business_day < \"2022-12-01\";\n\"\"\"\ntrain(sql)\ngenerate_results(version, base)\nevaluate(version)\n# To beat:\n# v8 0.225812\n```","id":"75aa22234ea91a53","x":1400,"y":-1982,"width":440,"height":405},
		{"type":"text","text":"## Example for model\n```\nselect \nbusiness_day,\npredicted_price_net,\nprice_net_actual,\nfrom `sellpick-analytics-ml.familyholding.export_20230207_after_v2`\nwhere version = \"v9_3_1_1_revenue_daily_base_prev_year\"\nand store_label = \"familyholding-13163\"\n\norder by 1\n```","id":"123fe4e83bc8ccdc","x":7600,"y":-2691,"width":700,"height":506},
		{"type":"text","text":"factors 3 weeks total\n```\n-- Get historic revenues\nwith revenue as (\n  select\n  store_label,\n  business_day,\n  format_date('%a', business_day) as weekday,\n  sum(price_net) as price_net,\n  from `sellpick-analytics-client.familyholding.daily_revenue`\n  group by store_label, business_day\n),\ncalendar as (\n  select\n  store_label,\n  business_day,\n  format_date('%a', business_day) as weekday,\n  from unnest(generate_date_array(\n    -- date_add(current_date(), interval 1 day)\n    -- date_add(current_date(), interval 10 day)\n    \"2022-12-01\",\n    \"2023-02-28\"\n  )) as business_day\n  cross join (select distinct store_label from `sellpick-analytics-client.familyholding.stores_v2`)\n),\nrevenue_with_average as (\n  select\n  *,\n  AVG(revenue.price_net) OVER (partition by store_label, weekday\n    ORDER BY revenue.business_day, weekday\n    ROWS BETWEEN 53 PRECEDING AND 51 PRECEDING\n  ) AS avg_price_net_prevyear_weekday,\n  AVG(revenue.price_net) OVER (partition by store_label\n    ORDER BY revenue.business_day\n    ROWS BETWEEN 371 PRECEDING AND 357 PRECEDING -- 53 weeks to 51 weeks ago - 1 week around the current week\n  ) AS avg_price_net_prevyear,\n  AVG(revenue.price_net) OVER (partition by store_label\n    ORDER BY revenue.business_day\n    ROWS BETWEEN 14 PRECEDING AND 1 PRECEDING\n  ) AS avg_price_net_currentyear,\n  from revenue\n  order by business_day desc\n),\npredictions as (\n  select\n  calendar.store_label,\n  calendar.business_day,\n  revenue_with_average.avg_price_net_prevyear_weekday * (revenue_with_average.avg_price_net_currentyear / revenue_with_average.avg_price_net_prevyear) as predicted_price_net,\n  revenue_with_average.price_net as price_net_actual,\n  from calendar\n  left join revenue_with_average on (revenue_with_average.store_label = calendar.store_label and calendar.business_day = revenue_with_average.business_day)\n  where revenue_with_average.avg_price_net_prevyear != 0\n),\ndiffs as (\n  select\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from predictions\n  where price_net_actual != 0\n  order by business_day, store_label\n)\n\nselect\n\"total\",\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by 1\n\nunion all\n\nselect\nstore_label,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by 1\n```","id":"c7f0ef5b34f6ce23","x":5340,"y":-1460,"width":540,"height":280},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 10.22.34.png","id":"8acbf3267d5218b8","x":5340,"y":-1180,"width":628,"height":220},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 12.40.00.png","id":"749022d90b1479ad","x":6133,"y":-1660,"width":706,"height":240},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 11.08.18.png","id":"539820750c10ff87","x":5380,"y":-920,"width":400,"height":350},
		{"type":"text","text":"[Example Google sheet](https://docs.google.com/spreadsheets/d/1jpb8pBmwMxMFWuBEWc5ZLJ2iDaR6wZrPd8q8XW_FKfM/edit#gid=1506864015)","id":"c22f54c6572b97f0","x":6320,"y":-2100,"width":250,"height":60},
		{"type":"text","text":"```\nv8_1_4_3_1_1_revenue_daily_base_prev_year\n```","id":"3ecbab8c954e563e","x":5220,"y":-220,"width":620,"height":94},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 11.11.58.png","id":"7166cc45ff04252a","x":5260,"y":-96,"width":394,"height":400},
		{"type":"file","file":"BK Umsatzvorhersage.md","id":"0e2430a7ba93e0dd","x":-259,"y":-1780,"width":930,"height":1120},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 11.56.47.png","id":"e35b041961457bb4","x":6133,"y":-1253,"width":739,"height":263},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 11.54.25.png","id":"86fbd3bbd0473cb2","x":6133,"y":-860,"width":688,"height":288},
		{"type":"text","text":"v9_3_1_1_1_revenue_daily_base_14_days","id":"91e033db7c83867a","x":6220,"y":-1720,"width":473,"height":60},
		{"type":"text","text":"sp v9_3_1_1_revenue_daily_base_prev_year","id":"ecf9527ee7f7b396","x":6289,"y":-1303,"width":394,"height":50},
		{"type":"text","text":"FH","id":"e1b14778b61889c7","x":6352,"y":-920,"width":250,"height":60},
		{"type":"text","text":"prevyear_weekday,\n```\n-- Get historic revenues\nwith revenue as (\n  select\n  store_label,\n  business_day,\n  format_date('%a', business_day) as weekday,\n  sum(price_net) as price_net,\n  from `sellpick-analytics-client.familyholding.daily_revenue`\n  group by store_label, business_day\n),\ncalendar as (\n  select\n  store_label,\n  business_day,\n  format_date('%a', business_day) as weekday,\n  from unnest(generate_date_array(\n    -- date_add(current_date(), interval 1 day)\n    -- date_add(current_date(), interval 10 day)\n    \"2022-12-01\",\n    \"2023-02-28\"\n  )) as business_day\n  cross join (select distinct store_label from `sellpick-analytics-client.familyholding.stores_v2`)\n),\nrevenue_with_average as (\n  select\n  *,\n  AVG(revenue.price_net) OVER (partition by store_label, weekday\n    ORDER BY revenue.business_day, weekday\n    ROWS BETWEEN 53 PRECEDING AND 51 PRECEDING\n  ) AS avg_price_net_prevyear_weekday,\n  AVG(revenue.price_net) OVER (partition by store_label\n    ORDER BY revenue.business_day\n    ROWS BETWEEN 371 PRECEDING AND 357 PRECEDING -- 53 weeks to 51 weeks ago - 1 week around the current week\n  ) AS avg_price_net_prevyear,\n  AVG(revenue.price_net) OVER (partition by store_label\n    ORDER BY revenue.business_day\n    ROWS BETWEEN 14 PRECEDING AND 1 PRECEDING\n  ) AS avg_price_net_currentyear,\n  from revenue\n  order by business_day desc\n),\npredictions as (\n  select\n  calendar.store_label,\n  calendar.business_day,\n  revenue_with_average.avg_price_net_prevyear_weekday as predicted_price_net, -- * (revenue_with_average.avg_price_net_currentyear / revenue_with_average.avg_price_net_prevyear) as predicted_price_net,\n  revenue_with_average.price_net as price_net_actual,\n  from calendar\n  left join revenue_with_average on (revenue_with_average.store_label = calendar.store_label and calendar.business_day = revenue_with_average.business_day)\n  where revenue_with_average.avg_price_net_prevyear != 0\n),\ndiffs as (\n  select\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from predictions\n  where price_net_actual != 0\n  order by business_day, store_label\n)\n\nselect\n\"total\",\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by 1\n\nunion all\n\nselect\nstore_label,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by 1-- Get historic revenues\nwith revenue as (\n  select\n  store_label,\n  business_day,\n  format_date('%a', business_day) as weekday,\n  sum(price_net) as price_net,\n  from `sellpick-analytics-client.familyholding.daily_revenue`\n  group by store_label, business_day\n),\ncalendar as (\n  select\n  store_label,\n  business_day,\n  format_date('%a', business_day) as weekday,\n  from unnest(generate_date_array(\n    -- date_add(current_date(), interval 1 day)\n    -- date_add(current_date(), interval 10 day)\n    \"2022-12-01\",\n    \"2023-02-28\"\n  )) as business_day\n  cross join (select distinct store_label from `sellpick-analytics-client.familyholding.stores_v2`)\n),\nrevenue_with_average as (\n  select\n  *,\n  AVG(revenue.price_net) OVER (partition by store_label, weekday\n    ORDER BY revenue.business_day, weekday\n    ROWS BETWEEN 53 PRECEDING AND 51 PRECEDING\n  ) AS avg_price_net_prevyear_weekday,\n  AVG(revenue.price_net) OVER (partition by store_label\n    ORDER BY revenue.business_day\n    ROWS BETWEEN 371 PRECEDING AND 357 PRECEDING -- 53 weeks to 51 weeks ago - 1 week around the current week\n  ) AS avg_price_net_prevyear,\n  AVG(revenue.price_net) OVER (partition by store_label\n    ORDER BY revenue.business_day\n    ROWS BETWEEN 14 PRECEDING AND 1 PRECEDING\n  ) AS avg_price_net_currentyear,\n  from revenue\n  order by business_day desc\n),\npredictions as (\n  select\n  calendar.store_label,\n  calendar.business_day,\n  revenue_with_average.avg_price_net_prevyear_weekday as predicted_price_net, -- * (revenue_with_average.avg_price_net_currentyear / revenue_with_average.avg_price_net_prevyear) as predicted_price_net,\n  revenue_with_average.price_net as price_net_actual,\n  from calendar\n  left join revenue_with_average on (revenue_with_average.store_label = calendar.store_label and calendar.business_day = revenue_with_average.business_day)\n  where revenue_with_average.avg_price_net_prevyear != 0\n),\ndiffs as (\n  select\n  store_label,\n  business_day,\n  price_net_actual,\n  predicted_price_net,\n  abs(price_net_actual - predicted_price_net) / price_net_actual as diff_sp,\n  from predictions\n  where price_net_actual != 0\n  order by business_day, store_label\n)\n\nselect\n\"total\",\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by 1\n\nunion all\n\nselect\nstore_label,\navg(diff_sp) as total,\navg(if(business_day between \"2022-12-01\" and \"2022-12-31\", diff_sp, null)) as dec,\navg(if(business_day between \"2023-01-01\" and \"2023-01-31\", diff_sp, null)) as jan,\navg(if(business_day between \"2023-02-01\" and \"2023-02-28\", diff_sp, null)) as feb,\nfrom diffs\ngroup by 1\n```","id":"3b25672d27fbf1d8","x":4562,"y":-1460,"width":578,"height":280},
		{"type":"text","text":"Steps:\nCreate model\nGenerate predictions\nComparison\n","id":"0cb0d5365197acaa","x":727,"y":-1356,"width":250,"height":117},
		{"type":"text","text":"v6_2\nRemove all variables\n\ndiff_sp 0.20460969589216327\ndiff_sp_dec 0.22206612856841793\ndiff_sp_jan 0.18715326321590872\n\n```\nCREATE OR REPLACE MODEL `sellpick-analytics-ml.familyholding.v6_2_revenue_daily_base_prev_year`\nOPTIONS (MODEL_TYPE = 'BOOSTED_TREE_REGRESSOR',\n-- NUM_PARALLEL_TREE = 1,\n-- MAX_TREE_DEPTH = 20,\n-- MIN_TREE_CHILD_WEIGHT = 5,\n-- LEARN_RATE= 0.15,\n-- COLSAMPLE_BYTREE = 0.9,\n-- MAX_ITERATIONS = 15,\n-- EARLY_STOP = TRUE,\n-- DATA_SPLIT_METHOD = 'RANDOM',\n-- DATA_SPLIT_EVAL_FRACTION = 0.1,\nINPUT_LABEL_COLS = ['price_net_relative'])\nAS SELECT\n\nr.store_label,\nis_friday,\nis_saturday,\nis_sunday,\nis_weekday,\ns.Location_type, -- Autobahn oder Stadt\ndiff_temp, -- Not relevant for BK customers\ntemperature, -- Not relevant for BK customers\nmain_weather,\nis_holiday,\n-- bridging_day_count,\ndaybeforeholiday,\nis_vacation,\nprice_net / avg_price_net as price_net_relative,\n\nFROM `sellpick-analytics-ml.familyholding.v2_revenue_daily_base_28_days` r\nleft join `sellpick-analytics-client.familyholding.stores_v2` s on s.store_label = r.store_label\n\nwhere avg_price_net != 0 and price_net != 0\nand business_day < \"2022-12-01\"\n```","id":"97e790e77859b9e8","x":1120,"y":-703,"width":500,"height":203},
		{"type":"file","file":"zAssets/Screenshot 2023-03-02 at 10.23.19.png","id":"7f2f6516dd03ee03","x":4562,"y":-1180,"width":645,"height":220},
		{"type":"text","text":"6.1\nHistory!\n\ntotal 0.19265804002408576\ndec 0.21582651522559557\nja 0.16948956482257602","id":"fcdfe5f445d2e00c","x":280,"y":-500,"width":300,"height":185},
		{"type":"text","text":"6.0\ntotal 0.17303512503491852\ndec 0.19722760784749827\nja 0.14884264222233892","id":"cb610c1e7e07b8a5","x":-183,"y":-432,"width":300,"height":117},
		{"type":"text","text":"# 4-Wochen","id":"7d3a025c14c19948","x":-560,"y":-403,"width":250,"height":60},
		{"type":"file","file":"zAssets/Screenshot 2023-02-28 at 10.40.16.png","id":"503277cbecbb71e5","x":2466,"y":-1837,"width":400,"height":285},
		{"type":"file","file":"zAssets/Screenshot 2023-02-28 at 09.52.18.png","id":"d29a42374e027e37","x":1680,"y":-1414,"width":1417,"height":154},
		{"type":"file","file":"zAssets/Screenshot 2023-02-28 at 10.39.02.png","id":"1bb38b6a7b2669e4","x":2121,"y":-1160,"width":731,"height":449},
		{"type":"text","text":"Week number also has effect","id":"32d2852978be7e0f","x":2416,"y":-1220,"width":250,"height":60},
		{"type":"text","text":"Weekdays all have effect","id":"7d8327e4c02c4678","x":2166,"y":-1474,"width":250,"height":60},
		{"type":"text","text":"v8\n\n","id":"92f8e63eda5914ae","x":2048,"y":-567,"width":492,"height":307},
		{"type":"text","text":"v6_3\nAutoML!\n\ntotal 0.27484494203969156\ndec 0.25083046830875588\njan 0.29885941577062741\n\n```\nCREATE OR REPLACE MODEL `sellpick-analytics-ml.familyholding.v6_3_revenue_daily_base_prev_year`\nOPTIONS (MODEL_TYPE = 'AUTOML_REGRESSOR',\nBUDGET_HOURS=2,\nINPUT_LABEL_COLS = ['price_net_relative'])\nAS SELECT\n\nr.store_label,\nis_friday,\nis_saturday,\nis_sunday,\nis_weekday,\ns.Location_type, -- Autobahn oder Stadt\ndiff_temp, -- Not relevant for BK customers\ntemperature, -- Not relevant for BK customers\nmain_weather,\nis_holiday,\n-- bridging_day_count,\ndaybeforeholiday,\nis_vacation,\nprice_net / avg_price_net as price_net_relative,\n\nFROM `sellpick-analytics-ml.familyholding.v2_revenue_daily_base_28_days` r\nleft join `sellpick-analytics-client.familyholding.stores_v2` s on s.store_label = r.store_label\n\nwhere avg_price_net != 0 and price_net != 0\nand business_day < \"2022-12-01\"\n```","id":"5dcf6a940040f140","x":1120,"y":-424,"width":500,"height":297},
		{"type":"file","file":"zAssets/Screenshot 2023-02-27 at 10.30.46.png","id":"d4e6eef2158d2d0b","x":-183,"y":-315,"width":321,"height":330},
		{"type":"file","file":"zAssets/Screenshot 2023-02-27 at 10.34.52.png","id":"29003a07637e2c95","x":280,"y":-315,"width":307,"height":312},
		{"type":"text","text":"We got data from old stores that only have 1 day of data. These very likely messed with the results...\n\n-> Fixed by joining with stores table!","id":"a194fdf134bfe5c8","x":1800,"y":-560,"width":250,"height":204},
		{"type":"text","text":"# Vorjahr","id":"49e688a9d518e87c","x":-580,"y":248,"width":250,"height":60},
		{"type":"text","text":"7.0\ntotal 0.24145325814099763\ndec 0.29037461549552385\njan 0.19253190078647131","id":"762f8404f95de828","x":-170,"y":220,"width":308,"height":117},
		{"type":"file","file":"zAssets/Screenshot 2023-02-27 at 22.29.21.png","id":"a1ee21883d07c92f","x":1120,"y":-127,"width":270,"height":249},
		{"type":"text","text":"7.1\ntotal 0.23208743045574015\ndec 0.28445872096653757\njan 0.17971613994494298","id":"4314b285bcadfff9","x":336,"y":220,"width":308,"height":117},
		{"type":"file","file":"zAssets/Screenshot 2023-02-27 at 10.35.30.png","id":"ad7ddc54663b4a39","x":-170,"y":337,"width":287,"height":289},
		{"type":"file","file":"zAssets/Screenshot 2023-02-27 at 10.35.46.png","id":"9a3f04f71c38670d","x":336,"y":337,"width":308,"height":223}
	],
	"edges":[
		{"id":"2fe1b4dabe1ec913","fromNode":"cb610c1e7e07b8a5","fromSide":"right","toNode":"fcdfe5f445d2e00c","toSide":"left"},
		{"id":"82b07cd4c77155fb","fromNode":"49e688a9d518e87c","fromSide":"right","toNode":"762f8404f95de828","toSide":"left"},
		{"id":"b8ce875987b10e14","fromNode":"fcdfe5f445d2e00c","fromSide":"right","toNode":"97e790e77859b9e8","toSide":"left"},
		{"id":"4cf9e95771b3e403","fromNode":"7d3a025c14c19948","fromSide":"right","toNode":"cb610c1e7e07b8a5","toSide":"left"},
		{"id":"ff0f12016a468563","fromNode":"762f8404f95de828","fromSide":"right","toNode":"4314b285bcadfff9","toSide":"left"},
		{"id":"a5c53d4aec5fa718","fromNode":"fcdfe5f445d2e00c","fromSide":"right","toNode":"5dcf6a940040f140","toSide":"left"},
		{"id":"0915ce69c7b719cb","fromNode":"97e790e77859b9e8","fromSide":"right","toNode":"a194fdf134bfe5c8","toSide":"left"},
		{"id":"9a2eba57ffc2dd2e","fromNode":"5dcf6a940040f140","fromSide":"right","toNode":"a194fdf134bfe5c8","toSide":"left"},
		{"id":"c1944dd147afefd4","fromNode":"ecf9527ee7f7b396","fromSide":"top","toNode":"749022d90b1479ad","toSide":"bottom"}
	]
}